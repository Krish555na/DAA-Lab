#include <stdio.h>

int knapSack(int N, int W, int val[], int wt[]) {
    int dp[W + 1];
    for (int i = 0; i <= W; i++) {
        dp[i] = 0;
	}
    for (int i = 0; i < N; i++) {
        for (int w = W; w >= wt[i]; w--) {
            if (dp[w] < val[i] + dp[w - wt[i]]) {
                dp[w] = val[i] + dp[w - wt[i]];
            }
        }
	}
    return dp[W];
}

int main() {
    int N, W;
    scanf("%d", &N);
    int val[N], wt[N];
    for (int i = 0; i < N; i++) {
        scanf("%d", &val[i]);
    }
    for (int i = 0; i < N; i++) {
        scanf("%d", &wt[i]);
    }
    scanf("%d", &W);
    printf("%d\n", knapSack(N, W, val, wt));

    return 0;
}

